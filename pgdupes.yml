#!/bin/bash
#
# Title:      PlexGuide (Reference Title File)
# YML Author: Admin9705
# URL:        https://plexguide.com - http://github.plexguide.com
# GNU:        General Public License v3.0
# Origin:     https://github.com/l3uddz
################################################################################
---
- hosts: localhost
  gather_facts: false
  tasks:
    # FACTS ######################################################################
    - name: "Set Known Facts"
      set_fact:
        pgrole: "pgdupes"
        extport: "0"

    - name: Server ID
      shell: "cat /var/plexguide/pg.serverid"
      register: serverid

    - name: Token Recall
      shell: "cat /var/plexguide/plex.token"
      register: plextoken

    - name: Recall User
      shell: "cat /var/plexguide/plex.user"
      register: user

    - name: Register IP
      shell: "cat /var/plexguide/server.ip"
      register: ipaddress

    - name: Install pip requirements
      pip:
        requirements: /opt/pgdupes/requirements.txt
        executable: pip3

    - name: "Including cron job"
      include_tasks: "/opt/coreapps/apps/_core.yml"

    - name: Create Basic Directories
      file: "path={{item}} state=directory mode=0775 owner=1000 group=1000"
      with_items:
        - "/opt/appdata/pgdupes/"

    - name: Transfer Files
      copy:
        src: /opt/pgdupes
        dest: /opt/appdata
        owner: "1000"
        group: "1000"
        mode: a+x
        force: yes

    - name: Import default config
      template:
        src: /opt/appdata/pgdupes/config.json.sample
        dest: /opt/appdata/pgdupes/config.json
        owner: "1000"
        group: "1000"
        mode: 0775
        force: yes

    - name: Set pgdupes.py as executable
      file:
        path: /opt/appdata/pgdupes/pgdupes.py
        owner: 1000
        group: 1000
        mode: a+x

    - name: "Create /usr/local/bin symlink"
      file:
        src: "/opt/appdata/pgdupes/pgdupes.py"
        dest: "/bin/pgdupes"
        state: link

    - name: Check Service's Existance
      stat:
        path: "/etc/systemd/systemd/pgdupes.service"
      register: pgp

    - name: Stop service
      service:
        name: pgdupes
        state: stopped
      when: pgp.stat.exists

    - name: PGDupes Service
      template:
        src: /opt/appdata/pgdupes/systemd/pgdupes.service
        dest: /etc/systemd/system/pgdupes.service
        force: yes

    - name: Daemon-Reload
      systemd: state=stopped name=pgdupes daemon_reload=yes enabled=no

    - name: Start PGDupes
      systemd: state=started name=pgdupes enabled=yes
